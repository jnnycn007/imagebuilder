<?xml version="1.0" standalone="yes"?>
<!--

============================================
Application bugs worked around in this file:
============================================

-->

<!DOCTYPE driconf [
   <!ELEMENT driconf      (device+)>
   <!ELEMENT device       (application | engine)+>
   <!ATTLIST device       driver CDATA #IMPLIED
                          device CDATA #IMPLIED>
   <!ELEMENT application  (option+)>
   <!ATTLIST application  name CDATA #REQUIRED
                          executable CDATA #IMPLIED
                          executable_regexp CDATA #IMPLIED
                          sha1 CDATA #IMPLIED
                          application_name_match CDATA #IMPLIED
                          application_versions CDATA #IMPLIED>
   <!ELEMENT engine       (option+)>

   <!-- engine_name_match: A regexp matching the engine name -->
   <!-- engine_versions: A version in range format
             (version 1 to 4 : "1:4") -->

   <!ATTLIST engine       engine_name_match CDATA #REQUIRED
                          engine_versions CDATA #IMPLIED>

   <!ELEMENT option       EMPTY>
   <!ATTLIST option       name CDATA #REQUIRED
                          value CDATA #REQUIRED>
]>

<driconf>
    <device driver="msm">
        <!--
            ANGLE is catastrophically broken, see:

               https://issues.angleproject.org/u/1/issues/431097618

            This broken codepath is exposed when skia detects vendor
            freedreno (as well as closed mali/img/adreno drivers.. maybe
            the issue will actually get fixed when a new enough skia+
            ANGLE hits the closed drivers on android).

            Workaround the issue by spoofing the vendor string so
            skia doesn't pick the broken ANGLE codepath.  Other
            electron apps will have the same problem, and should be
            listed here as well.

            This file is based on:
            https://oftc.catirclogs.org/aarch64-laptops/2025-09-29#34670310

	    Please also have a look at
	    /etc/environment.d/90-freedreno-angle-hack.conf
	    for an alternative workaround.
         -->
        <application name="Chromium" executable="chromium">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="Chromium" executable="chromium-browser">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="Chromium" executable="chrome">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="VS Code" executable="code">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="VS Codium" executable="codium">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="element-desktop" executable="element-desktop">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="signal" executable="signal">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="vivaldi-bin" executable="vivaldi-bin">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
        <application name="code" executable="vivaldi-bin">
            <option name="force_gl_vendor" value="angleisbroken"/>
        </application>
    </device>
</driconf>
